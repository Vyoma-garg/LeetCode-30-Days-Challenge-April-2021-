# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def removeNthFromEnd(self, head: ListNode, n: int) -> ListNode:
        if head==None:
            return head
        if head.next==None:
            head=None
            return head
        if head.next.next==None:
            if n==1:
                head.next=None
                return head
            if n==2:
                head=head.next
                head.next=None
                return head
        
        if head.next.next.next==None:  
            if n==1:
                head.next.next=None
                return head
            if n==2:
                head.next=head.next.next
                return head
            if n==3:
                head=head.next
                
                return head
        
        p=head
        length=0
        while(p!=None):
            length=length+1
            p=p.next
        
        p1=head
        
        if length==n:
            return head.next

        for i in range(length-n-1):
            p1=p1.next
            
        p1.next=p1.next.next
        
        return head
